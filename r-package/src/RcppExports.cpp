// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// create_solver_sparse_dataset
SEXP create_solver_sparse_dataset(const Rcpp::S4& x, const Rcpp::NumericVector& y);
RcppExport SEXP _blitzml_create_solver_sparse_dataset(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::S4& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(create_solver_sparse_dataset(x, y));
    return rcpp_result_gen;
END_RCPP
}
// BlitzML_new_solver
SEXP BlitzML_new_solver();
RcppExport SEXP _blitzml_BlitzML_new_solver() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(BlitzML_new_solver());
    return rcpp_result_gen;
END_RCPP
}
// BlitzML_new_parameters
SEXP BlitzML_new_parameters(const Rcpp::NumericVector params);
RcppExport SEXP _blitzml_BlitzML_new_parameters(SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(BlitzML_new_parameters(params));
    return rcpp_result_gen;
END_RCPP
}
// BlitzML_sparse_linear_solver_compute_max_l1_penalty
double BlitzML_sparse_linear_solver_compute_max_l1_penalty(SEXP xptr_solver, SEXP xptr_dataset, SEXP xptr_params);
RcppExport SEXP _blitzml_BlitzML_sparse_linear_solver_compute_max_l1_penalty(SEXP xptr_solverSEXP, SEXP xptr_datasetSEXP, SEXP xptr_paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr_solver(xptr_solverSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xptr_dataset(xptr_datasetSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xptr_params(xptr_paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(BlitzML_sparse_linear_solver_compute_max_l1_penalty(xptr_solver, xptr_dataset, xptr_params));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_blitzml_create_solver_sparse_dataset", (DL_FUNC) &_blitzml_create_solver_sparse_dataset, 2},
    {"_blitzml_BlitzML_new_solver", (DL_FUNC) &_blitzml_BlitzML_new_solver, 0},
    {"_blitzml_BlitzML_new_parameters", (DL_FUNC) &_blitzml_BlitzML_new_parameters, 1},
    {"_blitzml_BlitzML_sparse_linear_solver_compute_max_l1_penalty", (DL_FUNC) &_blitzml_BlitzML_sparse_linear_solver_compute_max_l1_penalty, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_blitzml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
